                    ; $0000 to $00FF Interrupt Vectors & RST # Vectors
                    ; $0000 to $00FF DMG Boot Code (Only At Initialization)
CART_HEAD   = $0100 ; $0100 to $014F Cartridge Header
CART_ROM0   = $0150 ; $0150 to $3FFF User Program Area - Bank 0 (Fixed)
CART_ROM1   = $4000 ; $4000 to $7FFF User Program Area - Bank 1 to n (Switchable)
CHAR_RAM    = $8000 ; $8000 to $97FF Bank 0 and 1 Character Data (Bank Switched)
BG1_RAM     = $9800 ; $9800 to $9BFF Background Display Data 1, Tile Indices/Attributes (Bank Switched)
BG2_RAM     = $9C00 ; $9C00 to $9FFF Background Display Data 2, Tile Indices/Attributes (Bank Switched)
CART_RAM    = $A000 ; $A000 to $BFFF Switchable Cartridge RAM Bank
IRAM0       = $C000 ; $C000 to $CFFF Internal RAM - Bank 0 (Fixed)
IRAM1       = $D000 ; $D000 to $DFFF Internal RAM - Bank 1-7 (CGB Switchable Between 32KB IRAM)
ECHO_IRAM   = $E000 ; $E000 to $FDFF Echo Of Internal RAM (Reserved)
OAM_RAM     = $FE00 ; $FE00 to $FE9F Sprite Object Attribute Memory (OAM)
IO_PORT_REG = $FF00 ; $FF00 to $FF7F Hardware I/O Port Register
ZP_IRAM     = $FF80 ; $FF80 to $FFFE Zero Page Internal RAM

P1_REG      = $FF00 ; $FF00 (P1)    Read Joypad Info      (--WWRRRR)
SB_REG      = $FF01 ; $FF01 (SB)    Serial Transfer Data  (R/W)
SC_REG      = $FF02 ; $FF02 (SC)    Serial I/O Control    (R/W)
DIV_REG     = $FF04 ; $FF04 (DIV)   Timer Divider         (R/W)
TIMA_REG    = $FF05 ; $FF05 (TIMA)  Timer Counter         (R/W)
TMA_REG     = $FF06 ; $FF06 (TMA)   Timer Modulo          (R/W)
TAC_REG     = $FF07 ; $FF07 (TAC)   Timer Control         (R/W, Timer Speed 0-1, Timer Start/Stop 2)
IF_REG      = $FF0F ; $FF0F (IF)    Interrupt Flag        (R/W)
NR10_REG    = $FF10 ; $FF10 (NR10)  Audio Sweep           (R/W, Sweep shift 0-2, Sweep Increase/Decrease 3, Sweep time 4-6)
NR11_REG    = $FF11 ; $FF11 (NR11)  Audio Channel #1      (R/W, Sound length data 0-5, Wave Pattern Duty 6-7)
NR12_REG    = $FF12 ; $FF12 (NR12)  Envelope Channel #1   (R/W, Number Of Envelope Sweep 0-2, Envelope Up/Down 3, Initial Value Of Envelope 4-7)
NR13_REG    = $FF13 ; $FF13 (NR13)  Sound Frequency #1    (W, Frequency LSB)
NR14_REG    = $FF14 ; $FF14 (NR14)  Sound Frequency #1    (W, Frequency Significant 3 Bits 0-2, Counter/Consecutive Selection 6, Initialise 7)
NR21_REG    = $FF16 ; $FF16 (NR21)  Audio Channel #2      (R/W, Sound Length Data 0-5, Wave Pattern Duty 6-7)
NR22_REG    = $FF17 ; $FF17 (NR22)  Envelope Channel #2   (R/W, Number Of Envelope Sweep 0-2, Envelope Up/Down 3, Initial Value Of Envelope 4-7)
NR23_REG    = $FF18 ; $FF18 (NR23)  Sound Frequency #2    (W, Frequency LSB)
NR24_REG    = $FF19 ; $FF19 (NR24)  Sound Frequency #2    (W, Frequency Significant 3 Bits 0-2, Counter/Consecutive Selection 6, Initialise 7)
NR30_REG    = $FF1A ; $FF1A (NR30)  Audio Channel #3      (R/W, Sound On/Off 7)
NR31_REG    = $FF1B ; $FF1B (NR31)  Sound Length #3       (R/W, Sound Length)
NR32_REG    = $FF1C ; $FF1C (NR32)  Volume #3             (R/W, Select Output Level 5-6)
NR33_REG    = $FF1D ; $FF1D (NR33)  Sound Frequency #3    (W, Frequency LSB)
NR34_REG    = $FF1E ; $FF1E (NR34)  Sound Frequency #3    (W, Frequency Significant 3 Bits 0-2, Counter/Consecutive Selection 6, Initialise 7)
NR41_REG    = $FF20 ; $FF20 (NR41)  Sound Length #4       (R/W, Sound Length 0-5)
NR42_REG    = $FF21 ; $FF21 (NR42)  Envelope Channel #4   (R/W, Number Of Envelope Sweep 0-2, Envelope Up/Down 3, Initial Value Of Envelope 4-7)
NR43_REG    = $FF22 ; $FF22 (NR43)  Audio Counter         (R/W, Dividing Ratio Of Frequency 0-2, Polynomial Counter's Step 3, Frequency Of Polynomial Counter 4-7)
NR44_REG    = $FF23 ; $FF23 (NR44)  Audio Counter         (R/W, Counter/Consecutive Selection 6, Initialise Audio 7)
NR50_REG    = $FF24 ; $FF24 (NR50)  Channel Control       (R/W, SO1 Output Volume 0-2, Vin SO1 On/Off 3, SO2 Output Volume 4-6, Vin SO2 On/Off 7)
NR51_REG    = $FF25 ; $FF25 (NR51)  Sound Output          (R/W, Sound 1 To SO1 0, Sound 2 To SO1 1, Sound 3 To SO1 2, Sound 4 To SO1 3, Sound 1 To SO2 4, Sound 2 To SO2 5, Sound 3 To SO2 6, Sound 4 To SO2 7)
NR52_REG    = $FF26 ; $FF26 (NR52)  Sound On/Off          (R/W, Channel #1 On/Off 0, Channel #2 On/Off 1, Channel #3 On/Off 2, Channel #4 On/Off 3, All Channels On/Off 7)
AUD3WAVERAM = $FF30 ; $FF30 to $FF3F (AUD3WAVERAM) Wave Data (RW, Sound Sample RAM - 16 bytes) | S
LCDC_REG    = $FF40 ; $FF40 (LCDC)  LCD Control           (R/W, Background On/Off 0, Object On/Off 1, Object Size 2, Background Address 3-4, Window On/Off 5, Window Address 6, LCD On/Off 7)
STAT_REG    = $FF41 ; $FF41 (STAT)  LCD Status            (R/W, VRAM/OAM Lock 0-1, Coincidence Flag 2, Mode 00 (H-Blank) 3, Mode 01 (V-Blank) 4, Mode 10 5, LYCEQULY Coincidence 6)
SCY_REG     = $FF42 ; $FF42 (SCY)   Scroll Screen Y       (R/W, Vertical Scroll)
SCX_REG     = $FF43 ; $FF43 (SCX)   Scroll Screen X       (R/W, Horizontal Scroll)
LY_REG      = $FF44 ; $FF44 (LY)    LCDC Y-Coord          (R/W)
LYC_REG     = $FF45 ; $FF45 (LYC)   LY Compare            (R/W)
DMA_REG     = $FF46 ; $FF46 (DMA)   DMA Transfer          (R/W)
BGP_REG     = $FF47 ; $FF47 (BGP)   BG Palette Data       (R/W)
OBP0_REG    = $FF48 ; $FF48 (OBP0)  Object Palette 0 Data (R/W)
OBP1_REG    = $FF49 ; $FF49 (OBP1)  Object Palette 1 Data (R/W)
WY_REG      = $FF4A ; $FF4A (WY)    Window Y Position     (R/W)
WX_REG      = $FF4B ; $FF4B (WX)    Window X Position     (R/W)

KEY1_REG    = $FF4D ; $FF4D (KEY1)  CPU Speed Select      (R/W, GBC Only)
VBK_REG     = $FF4F ; $FF4F (VBK)   VRAM Bank Select      (R/W, GBC Only)

DMG_REG     = $FF50 ; $FF50 (DMG)   DMG Bank Select       (R/W)

HDMA1_REG   = $FF51 ; $FF51 (HDMA1) HBL General DMA       (R/W, GBC Only)
HDMA2_REG   = $FF52 ; $FF52 (HDMA2) HBL General DMA       (R/W, GBC Only)
HDMA3_REG   = $FF53 ; $FF53 (HDMA3) HBL General DMA       (R/W, GBC Only)
HDMA4_REG   = $FF54 ; $FF54 (HDMA4) HBL General DMA       (R/W, GBC Only)
HDMA5_REG   = $FF55 ; $FF55 (HDMA5) HBL General DMA       (R/W, GBC Only)
RP_REG      = $FF56 ; $FF56 (RP)    Infrared Comms        (R/W, GBC Only)
BCPS_REG    = $FF68 ; $FF68 (BCPS)  BG Colour Index       (R/W, GBC Only)
BCPD_REG    = $FF69 ; $FF69 (BCPD)  BG Colour Data        (R/W, GBC Only)
OCPS_REG    = $FF6A ; $FF6A (OCPS)  Object Colour Index   (R/W, GBC Only)
OCPD_REG    = $FF6B ; $FF6B (OCPD)  Object Colour Data    (R/W, GBC Only)
SVBK_REG    = $FF70 ; $FF70 (SVBK)  RAM Bank Select       (R/W, GBC Only)

IE_REG      = $FFFF ; $FFFF (IE)    Interrupt Enable Flag Register
VBL_FLAG    =    $1 ; $FFFF Bit 0 VBL                      (R/W)
LCDC_FLAG   =    $2 ; $FFFF Bit 1 LCDC                     (R/W)
TOF_FLAG    =    $4 ; $FFFF Bit 2 Timer Overflow           (R/W)
SIO_FLAG    =    $8 ; $FFFF Bit 3 Serial I/O Transfer Done (R/W)
HILO_FLAG   =   $10 ; $FFFF Bit 4 HILO Transition          (R/W)